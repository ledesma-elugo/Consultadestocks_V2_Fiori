sap.ui.define([
	"sap/ui/core/mvc/Controller"
], function (Controller) {
	"use strict";

	return Controller.extend("ar.ledesma.fiori.mm.ui5consultarstockext.controller.Principal", {

		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf zmmp.cons.stockv2.view.Principal
		 */
		oDataTabla: {
			Stocks: "",
			Reservas: "",
			Necesidades: "",
			Mercancias: ""
		},
		oModelo: new sap.ui.model.json.JSONModel(),

		onInit: function () {
			//This code was generated by the layout editor.
			var pagina = this.getView().byId("desktop");
			var paginaM = this.getView().byId("mobile");
			if (screen.width > 500) {

				pagina.setVisible(true);
				paginaM.setVisible(false);
			} else {
				pagina.setVisible(false);
				paginaM.setVisible(true);
			}
			this.cargarModelos();
		},

		cargarModelos: function() {
			//MODELO RESERVAS
			let oModelReservas = new sap.ui.model.json.JSONModel();
			oModelReservas.setSizeLimit(10000000);
			this.getView().setModel(oModelReservas, "modelReservas");
	
			//MODELO NECESIDADES
			let oModelNecesidades = new sap.ui.model.json.JSONModel();
			oModelNecesidades.setSizeLimit(10000000);
			this.getView().setModel(oModelNecesidades, "modelNecesidades");
	
			//MODELO MERCANCIAS
			let oModelMercancias = new sap.ui.model.json.JSONModel();
			oModelMercancias.setSizeLimit(10000000);
			this.getView().setModel(oModelMercancias, "modelMercancias");

			//MODELO STOCK
			let oModelStock = new sap.ui.model.json.JSONModel();
			oModelStock.setSizeLimit(10000000);
			this.getView().setModel(oModelStock, "modelStock");
		},


		onLgortSelected: function (controlEvento) {
			this.getView().getModel("modelReservas").setData([]);
			this.getView().getModel("modelNecesidades").setData([]);
			this.getView().getModel("modelMercancias").setData([]);
			this.getView().getModel("modelStock").setData([]);
			var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
			var appPath = appId.replaceAll(".", "/");
			var appModulePath = jQuery.sap.getModulePath(appPath);
			var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";

			var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var oModelNecesidadesRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var oModelMovMercanciasRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var oModelStockRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var registroSeleccionado = controlEvento.getSource().getRows()[controlEvento.getParameters().rowIndex];
			var almacen = registroSeleccionado.getCells()[0].getProperty("text");
			//var tablaReservas = this.getView().byId("tablaReservas");
			//var tablaNecesidades = this.getView().byId("tablaNecesidades");
			//var tablaMercancias = this.getView().byId("tablaMercancias");
			//var tablaStock = this.getView().byId("tablaStock");


			var entityReservas = "/ReservasSet";
			var entityNecesidades = "/NecesidadesSet";
			var entityMercancias = "/MovMercanciasSet";
			var entityStock = "/StockPorLoteSet";
			var oFiltersReservas = [];
			var oBuscadorCentro = this.getView().byId("searchFieldPlant");
			var oBuscadorMaterial = this.getView().byId("Material");
			/* var oDataReservasRead = {
				NroReserva: "",
				FechaNec: "",
				Material: "",
				CantidadNec: "",
				CantidadReduc: "",
				CantidadDif: "",
				ClaseMov: "",
				MovimMercPer: "",
				NroOrden: ""
			};
			var oDataNecesidadesRead = {
				Fecha: "",
				ElemPlanif: "",
				DatosElemPlanif: "",
				FechaReprog: "",
				Excepcion: "",
				Entrada: "",
				Prioridad: ""
			};
			var oDataMercanciasRead = {
				ClaseMov: "",
				TextoClaseMov: "",
				Orden: "",
				CentroCoste: "",
				DocMaterial: "",
				FechaContab: "",
				Cantidad: "",
				UnidadEnt: "",
				Lote: ""
			};
			var oDataStock = {};
			*/


			if (oBuscadorMaterial.getValue().search("-") > 1) {
				var mat = new sap.ui.model.Filter({
					path: "Matnr",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: oBuscadorMaterial.getValue().substring(0, oBuscadorMaterial.getValue().search("-"))
				});
			} else {
				var mat = new sap.ui.model.Filter({
					path: "Matnr",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: oBuscadorMaterial.getValue()
				});
			}
			oFiltersReservas.push(mat);
			var Werks = new sap.ui.model.Filter({
				path: "Werks",
				operator: sap.ui.model.FilterOperator.EQ,
				value1: oBuscadorCentro.getValue().substring(0, 4)
			});
			oFiltersReservas.push(Werks);
			var Lgort = new sap.ui.model.Filter({
				path: "Lgort",
				operator: sap.ui.model.FilterOperator.EQ,
				value1: almacen
			});
			oFiltersReservas.push(Lgort);

			let that= this;
			function fnSuccessNecesidades(oDataR, oResponse) {
				that.getView().getModel("modelNecesidades").setData(oDataR.results);
				//oDataNecesidadesRead = oDataR;
			}
			function fnSuccessMercancias(oDataR, oResponse) {
				that.getView().getModel("modelMercancias").setData(oDataR.results);
				//oDataMercanciasRead = oDataR;
			}
			function fnSuccessReservas(oDataR, oResponse) {
				that.getView().getModel("modelReservas").setData(oDataR.results);
				//oDataReservasRead = oDataR;
			}

			function fnSuccessStock(oDataR, oResponse) {
				//oDataStock = oDataR;
				//INI DSANTIRACHI 27.09.24: Cambio para que funcione el paginado.
				let aResults = [];
				for (var j = 0; j < oDataR.results.length; j++) {
					if (!(oDataR.results[j].FreeUse === '0.000' &&
							oDataR.results[j].InTransfer === '0.000' &&
							oDataR.results[j].InQualityControl === '0.000' &&
							oDataR.results[j].Locked === '0.000')) {
						aResults.push(oDataR.results[j]);
					}
				}
				that.getView().getModel("modelStock").setData(aResults);
				//FIN DSANTIRACHI 27.09.24
			}

			function fnErrorStock(oError) {}
			function fnErrorReservas(oError) {}

			var aFilterStock = [];
			//aFilterStock.push(new sap.ui.model.Filter("MATERIAL", "EQ", oBuscadorMaterial.getValue().substring(0, oBuscadorMaterial.getValue().search("-") )))
			aFilterStock.push(new sap.ui.model.Filter("Warehouse", "EQ", almacen));
			aFilterStock.push(new sap.ui.model.Filter("Plant", "EQ", oBuscadorCentro.getValue().substring(0, 4)));

			if (oBuscadorMaterial.getValue().search("-") > 1) {
				var mat = new sap.ui.model.Filter({
					path: "MATERIAL",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: oBuscadorMaterial.getValue().substring(0, oBuscadorMaterial.getValue().search("-"))
				});
			} else {
				var mat = new sap.ui.model.Filter({
					path: "MATERIAL",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: oBuscadorMaterial.getValue()
				});
			}

			aFilterStock.push(mat);

			oModelStockRead.read(entityStock, {
				filters: aFilterStock,
				success: fnSuccessStock,
				error: fnErrorStock
			});

			/* oModelStockRead.attachRequestCompleted(function (resp) {
				tablaStock.removeAllItems();
				for (var j = 0; j < oDataStock.results.length; j++) {
					var oRegistroStock = new sap.m.ColumnListItem();
					var lote = new sap.m.Label();
					var stockLibre = new sap.m.Label();
					var stockTras = new sap.m.Label();
					var stockControl = new sap.m.Label();
					var stockBloq = new sap.m.Label();

					lote.setText(oDataStock.results[j].Charg);
					stockLibre.setText(oDataStock.results[j].FreeUse);
					stockTras.setText(oDataStock.results[j].InTransfer);
					stockControl.setText(oDataStock.results[j].InQualityControl);
					stockBloq.setText(oDataStock.results[j].Locked);

					if (!(oDataStock.results[j].FreeUse === '0.000' &&
							oDataStock.results[j].InTransfer === '0.000' &&
							oDataStock.results[j].InQualityControl === '0.000' &&
							oDataStock.results[j].Locked === '0.000')) {
						oRegistroStock.addCell(lote);
						oRegistroStock.addCell(stockLibre);
						oRegistroStock.addCell(stockTras);
						oRegistroStock.addCell(stockControl);
						oRegistroStock.addCell(stockBloq);

						tablaStock.addItem(oRegistroStock);
					}

				}
			}); */

			oModelRead.read(entityReservas, {
				filters: oFiltersReservas,
				success: fnSuccessReservas,
				error: fnErrorReservas
			});

			/* oModelRead.attachRequestCompleted(function () {
				tablaReservas.removeAllItems();
				for (var j = 0; j < oDataReservasRead.results.length; j++) {
					var oRegistroReservas = new sap.m.ColumnListItem();
					var nroReserva = new sap.m.Label();
					var fechaNec = new sap.m.Label();
					var cantNec = new sap.m.Label();
					var cantReduc = new sap.m.Label();
					var cantDif = new sap.m.Label();
					var claseMov = new sap.m.Label();
					var movimPer = new sap.m.Label();
					var nroOrden = new sap.m.Label();
					nroReserva.setText(oDataReservasRead.results[j].NroReserva);
					fechaNec.setText(oDataReservasRead.results[j].FechaNec);
					cantNec.setText(oDataReservasRead.results[j].CantidadNec);
					cantReduc.setText(oDataReservasRead.results[j].CantidadReduc);
					cantDif.setText(oDataReservasRead.results[j].CantidadDif);
					claseMov.setText(oDataReservasRead.results[j].ClaseMov);
					movimPer.setText(oDataReservasRead.results[j].MovimMercPer);
					nroOrden.setText(oDataReservasRead.results[j].NroOrden);
					oRegistroReservas.addCell(nroReserva);
					oRegistroReservas.addCell(fechaNec);
					oRegistroReservas.addCell(cantNec);
					oRegistroReservas.addCell(cantReduc);
					oRegistroReservas.addCell(cantDif);
					oRegistroReservas.addCell(claseMov);
					oRegistroReservas.addCell(movimPer);
					oRegistroReservas.addCell(nroOrden);
					tablaReservas.addItem(oRegistroReservas);
				}
			}); */
			oModelNecesidadesRead.read(entityNecesidades, {
				filters: oFiltersReservas,
				success: fnSuccessNecesidades,
				error: fnErrorReservas
			});
			/* oModelNecesidadesRead.attachRequestCompleted(function () {
				tablaNecesidades.removeAllItems();
				for (var j = 0; j < oDataNecesidadesRead.results.length; j++) {
					var oRegistroNecesidades = new sap.m.ColumnListItem();
					var fecha = new sap.m.Label();
					var elemPlanif = new sap.m.Label();
					var datosElemPlanif = new sap.m.Label();
					var fechaReprog = new sap.m.Label();
					var excep = new sap.m.Label();
					var entrada = new sap.m.Label();
					var prioridad = new sap.m.Label();
					fecha.setText(oDataNecesidadesRead.results[j].Fecha);
					elemPlanif.setText(oDataNecesidadesRead.results[j].ElemPlanif);
					datosElemPlanif.setText(oDataNecesidadesRead.results[j].DatosElemPlanif);
					fechaReprog.setText(oDataNecesidadesRead.results[j].FechaReprog);
					excep.setText(oDataNecesidadesRead.results[j].Excepcion);
					entrada.setText(oDataNecesidadesRead.results[j].Entrada);
					prioridad.setText(oDataNecesidadesRead.results[j].Prioridad);
					oRegistroNecesidades.addCell(fecha);
					oRegistroNecesidades.addCell(elemPlanif);
					oRegistroNecesidades.addCell(datosElemPlanif);
					oRegistroNecesidades.addCell(fechaReprog);
					oRegistroNecesidades.addCell(excep);
					oRegistroNecesidades.addCell(entrada);
					oRegistroNecesidades.addCell(prioridad);
					tablaNecesidades.addItem(oRegistroNecesidades);
				}
			}); */
			oModelMovMercanciasRead.read(entityMercancias, {
				filters: oFiltersReservas,
				success: fnSuccessMercancias,
				error: fnErrorReservas
			});
			/* oModelMovMercanciasRead.attachRequestCompleted(function () {
				tablaMercancias.removeAllItems();
				for (var j = 0; j < oDataMercanciasRead.results.length; j++) {
					var oRegistroMercancias = new sap.m.ColumnListItem();
					var claseMov = new sap.m.Label();
					var textoClaseMov = new sap.m.Label();
					var orden = new sap.m.Label();
					var centroCoste = new sap.m.Label();
					var docMat = new sap.m.Label();
					var fechaContab = new sap.m.Label();
					var cantidad = new sap.m.Label();
					var unidad = new sap.m.Label();
					var lote = new sap.m.Label();
					claseMov.setText(oDataMercanciasRead.results[j].ClaseMov);
					textoClaseMov.setText(oDataMercanciasRead.results[j].TextoClaseMov);
					orden.setText(oDataMercanciasRead.results[j].Orden);
					centroCoste.setText(oDataMercanciasRead.results[j].CentroCoste);
					docMat.setText(oDataMercanciasRead.results[j].DocMaterial);
					fechaContab.setText(oDataMercanciasRead.results[j].FechaContab);
					cantidad.setText(oDataMercanciasRead.results[j].Cantidad);
					unidad.setText(oDataMercanciasRead.results[j].UnidadEnt);
					lote.setText(oDataMercanciasRead.results[j].Lote);
					oRegistroMercancias.addCell(claseMov);
					oRegistroMercancias.addCell(textoClaseMov);
					oRegistroMercancias.addCell(orden);
					oRegistroMercancias.addCell(centroCoste);
					oRegistroMercancias.addCell(docMat);
					oRegistroMercancias.addCell(fechaContab);
					oRegistroMercancias.addCell(cantidad);
					oRegistroMercancias.addCell(unidad);
					oRegistroMercancias.addCell(lote);
					tablaMercancias.addItem(oRegistroMercancias);
				} 
			});*/
		},

		onLgortSelectedM: function (controlEvento) {
			var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
			var appPath = appId.replaceAll(".", "/");
			var appModulePath = jQuery.sap.getModulePath(appPath);
			var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var oModelNecesidadesRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var oModelMovMercanciasRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var registroSeleccionado = controlEvento.getSource().getRows()[controlEvento.getParameters().rowIndex];
			var oVista = this.getView();
			var tablaDatos = this.oDataTabla;
			var modeloDatos = this.oModelo;
			var aReservas = [];
			var aNecesidades = [];
			var aMercancias = [];
			var almacen = registroSeleccionado.getCells()[0].getProperty("htmlText");
			var entityReservas = "/ReservasSet";
			var entityNecesidades = "/NecesidadesSet";
			var entityMercancias = "/MovMercanciasSet";
			var oFiltersReservas = [];
			var oBuscadorCentro = this.getView().byId("searchFieldPlantM");
			var oBuscadorMaterial = this.getView().byId("MaterialM");
			var oDataReservasRead = {
				NroReserva: "",
				FechaNec: "",
				Material: "",
				CantidadNec: "",
				CantidadReduc: "",
				CantidadDif: "",
				ClaseMov: "",
				MovimMercPer: "",
				NroOrden: ""
			};
			var oDataNecesidadesRead = {
				Fecha: "",
				ElemPlanif: "",
				DatosElemPlanif: "",
				FechaReprog: "",
				Excepcion: "",
				Entrada: "",
				Prioridad: ""
			};
			var oDataMercanciasRead = {
				ClaseMov: "",
				TextoClaseMov: "",
				Orden: "",
				CentroCoste: "",
				DocMaterial: "",
				FechaContab: "",
				Cantidad: "",
				UnidadEnt: "",
				Lote: ""
			};

			if (oBuscadorMaterial.getValue().search("-") > 1) {
				var mat = new sap.ui.model.Filter({
					path: "Matnr",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: oBuscadorMaterial.getValue().substring(0, oBuscadorMaterial.getValue().search("-"))
				});
			} else {
				var mat = new sap.ui.model.Filter({
					path: "Matnr",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: oBuscadorMaterial.getValue()
				});
			}

			oFiltersReservas.push(mat);
			var Werks = new sap.ui.model.Filter({
				path: "Werks",
				operator: sap.ui.model.FilterOperator.EQ,
				value1: oBuscadorCentro.getValue().substring(0, 4)
			});
			oFiltersReservas.push(Werks);
			var Lgort = new sap.ui.model.Filter({
				path: "Lgort",
				operator: sap.ui.model.FilterOperator.EQ,
				value1: almacen
			});
			oFiltersReservas.push(Lgort);

			function fnSuccessNecesidades(oDataR, oResponse) {
				oDataNecesidadesRead = oDataR;
			}

			function fnSuccessMercancias(oDataR, oResponse) {
				oDataMercanciasRead = oDataR;
			}

			function fnSuccessReservas(oDataR, oResponse) {
				oDataReservasRead = oDataR;
			}

			function fnErrorReservas(oError) {}
			oModelRead.read(entityReservas, {
				filters: oFiltersReservas,
				success: fnSuccessReservas,
				error: fnErrorReservas
			});
			oModelRead.attachRequestCompleted(function () {
				for (var j = 0; j < oDataReservasRead.results.length; j++) {

					aReservas.push({
						NroReserva: oDataReservasRead.results[j].NroReserva
					});
					aReservas[j].FecNeces = oDataReservasRead.results[j].FechaNec;
					aReservas[j].ClasMov = oDataReservasRead.results[j].ClaseMov;
					aReservas[j].CantNeces = oDataReservasRead.results[j].CantidadNec;
					aReservas[j].CantReduc = oDataReservasRead.results[j].CantidadReduc;
					aReservas[j].CantDif = oDataReservasRead.results[j].CantidadDif;
					aReservas[j].MovMercPerm = oDataReservasRead.results[j].MovimMercPer;
					aReservas[j].NroOrden = oDataReservasRead.results[j].NroOrden;
				}

				tablaDatos.Reservas = aReservas;
				modeloDatos.setData(tablaDatos);
				oVista.setModel(modeloDatos);

			});
			oModelNecesidadesRead.read(entityNecesidades, {
				filters: oFiltersReservas,
				success: fnSuccessNecesidades,
				error: fnErrorReservas
			});
			oModelNecesidadesRead.attachRequestCompleted(function () {
				for (var j = 0; j < oDataNecesidadesRead.results.length; j++) {

					aNecesidades.push({
						Fecha: oDataNecesidadesRead.results[j].Fecha
					});
					aNecesidades[j].Fecha = oDataNecesidadesRead.results[j].Fecha;
					aNecesidades[j].ElemPlanif = oDataNecesidadesRead.results[j].ElemPlanif;
					aNecesidades[j].DatosElemPlanif = oDataNecesidadesRead.results[j].DatosElemPlanif;
					aNecesidades[j].FechaReprog = oDataNecesidadesRead.results[j].FechaReprog;
					aNecesidades[j].Excepcion = oDataNecesidadesRead.results[j].Excepcion;
					aNecesidades[j].Entrada = oDataNecesidadesRead.results[j].Entrada;
					aNecesidades[j].Prioridad = oDataNecesidadesRead.results[j].Prioridad;
				}

				tablaDatos.Necesidades = aNecesidades;
				modeloDatos.setData(tablaDatos);
				oVista.setModel(modeloDatos);
			});
			oModelMovMercanciasRead.read(entityMercancias, {
				filters: oFiltersReservas,
				success: fnSuccessMercancias,
				error: fnErrorReservas
			});
			oModelMovMercanciasRead.attachRequestCompleted(function () {
				for (var j = 0; j < oDataMercanciasRead.results.length; j++) {

					aMercancias.push({
						ClaseMov: oDataMercanciasRead.results[j].ClaseMov
					});
					aMercancias[j].TextoClaseMov = oDataMercanciasRead.results[j].TextoClaseMov;
					aMercancias[j].Orden = oDataMercanciasRead.results[j].Orden;
					aMercancias[j].CentroCoste = oDataMercanciasRead.results[j].CentroCoste;
					aMercancias[j].DocMaterial = oDataMercanciasRead.results[j].DocMaterial;
					aMercancias[j].FechaContab = oDataMercanciasRead.results[j].FechaContab;
					aMercancias[j].Cantidad = oDataMercanciasRead.results[j].Cantidad;
					aMercancias[j].CantidadEnt = oDataMercanciasRead.results[j].CantidadEnt;
					aMercancias[j].Lote = oDataMercanciasRead.results[j].Lote;
				}

				tablaDatos.Mercancias = aMercancias;
				modeloDatos.setData(tablaDatos);
				oVista.setModel(modeloDatos);

			});
		},

		onPress: function (oEvent) {
			var oBuscadorAlmacen = this.getView().byId("searchFieldWarehouse");
			var oBuscadorCentro = this.getView().byId("searchFieldPlant");
			var oBuscadorMaterial = this.getView().byId("Material");
			var tabla = this.getView().byId("tablaStocks");
			var tablaDatos = this.oDataTabla;
			var modeloDatos = this.oModelo;
			var oVista = this.getView();
			var aStocks = [];

			if (!oBuscadorMaterial.getValue() || !oBuscadorCentro.getValue()) {
				tabla.setVisible(true);
			} else {
				tabla.setVisible(true);
				var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
				var appPath = appId.replaceAll(".", "/");
				var appModulePath = jQuery.sap.getModulePath(appPath);
				var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
				//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
				var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
				var entity = "/StockSet";
				var oFilters = [];
				var oDataRead = {
					Warehouse: "",
					get_ind_lines: "",
					QUAL_INSPECTION: "",
					BLKD_STKC: "",
					RESTR_USE: "",
					RESERVATIONS: "",
					RESTR_CONSI: "",
					MEINS: ""
				};

				function fnSuccess(oDataR, oResponse) {
					oDataRead = oDataR;
				}

				function fnError(oError) {}
				if (oBuscadorMaterial.getValue().search("-") > 1) {
					var Campo1 = new sap.ui.model.Filter({
						path: "MATERIAL",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: oBuscadorMaterial.getValue().substring(0, oBuscadorMaterial.getValue().search("-"))
					});
				} else {
					var Campo1 = new sap.ui.model.Filter({
						path: "MATERIAL",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: oBuscadorMaterial.getValue()
					});
				}
				oFilters.push(Campo1);
				var Campo2 = new sap.ui.model.Filter({
					path: "Plant",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: oBuscadorCentro.getValue().substring(0, 4)
				});
				oFilters.push(Campo2);
				if (oBuscadorAlmacen.getValue().substring(0, 4) !== "") {
					var Campo3 = new sap.ui.model.Filter({
						path: "Warehouse",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: oBuscadorAlmacen.getValue().substring(0, 4)
					});
					oFilters.push(Campo3);
				}
				oModelRead.read(entity, {
					filters: oFilters,
					success: fnSuccess,
					error: fnError
				});
				oModelRead.attachRequestCompleted(function () {
					for (var j = 0; j < oDataRead.results.length; j++) {

						aStocks.push({
							Almacen: oDataRead.results[j].Warehouse
						});
						aStocks[j].StockLibre = oDataRead.results[j].get_ind_lines;
						aStocks[j].StockCtrl = oDataRead.results[j].QUAL_INSPECTION;
						aStocks[j].StockBloqueado = oDataRead.results[j].BLKD_STKC;
						aStocks[j].StockTotal = oDataRead.results[j].RESTR_USE;
						aStocks[j].Reservas = oDataRead.results[j].RESERVATIONS;
						aStocks[j].StockConsigNoLibre = oDataRead.results[j].RESTR_CONSI;
						aStocks[j].UM = oDataRead.results[j].MEINS;

					}
					tablaDatos.Stocks = aStocks;
					modeloDatos.setData(tablaDatos);
					oVista.setModel(modeloDatos);
				});
			}
		},

		onPressM: function (oEvent) {
			var tablaDatos = this.oDataTabla;
			var modeloDatos = this.oModelo;
			var oBuscadorAlmacen = this.getView().byId("searchFieldWarehouseM");
			var oBuscadorCentro = this.getView().byId("searchFieldPlantM");
			var oBuscadorMaterial = this.getView().byId("MaterialM");
			var oVista = this.getView();
			var aStocks = [];
			var tabla = this.getView().byId("tablaStocksM");
			var columnaMain0 = this.getView().byId("__label0M");
			var columnaMain1 = this.getView().byId("__label1M");
			var columnaMain2 = this.getView().byId("__label2M");
			var columnaMain3 = this.getView().byId("__label3M");
			var columnaMain4 = this.getView().byId("__label4M");
			var columnaMain5 = this.getView().byId("__label5M");
			var columnaMain6 = this.getView().byId("__label6M");
			var columnaMain7 = this.getView().byId("__label7M");
			columnaMain0.addStyleClass("smallbold");
			columnaMain1.addStyleClass("smallbold");
			columnaMain2.addStyleClass("smallbold");
			columnaMain3.addStyleClass("smallbold");
			columnaMain4.addStyleClass("smallbold");
			columnaMain5.addStyleClass("smallbold");
			columnaMain6.addStyleClass("smallbold");
			columnaMain7.addStyleClass("smallbold");
			var columnaReservasM1 = this.getView().byId("__columnaReservasM1");
			var columnaReservasM2 = this.getView().byId("__columnaReservasM2");
			var columnaReservasM3 = this.getView().byId("__columnaReservasM3");
			var columnaReservasM4 = this.getView().byId("__columnaReservasM4");
			var columnaReservasM5 = this.getView().byId("__columnaReservasM5");
			var columnaReservasM6 = this.getView().byId("__columnaReservasM6");
			var columnaReservasM7 = this.getView().byId("__columnaReservasM7");
			var columnaReservasM8 = this.getView().byId("__columnaReservasM8");
			columnaReservasM1.addStyleClass("smallbold");
			columnaReservasM2.addStyleClass("smallbold");
			columnaReservasM3.addStyleClass("smallbold");
			columnaReservasM4.addStyleClass("smallbold");
			columnaReservasM5.addStyleClass("smallbold");
			columnaReservasM6.addStyleClass("smallbold");
			columnaReservasM7.addStyleClass("smallbold");
			columnaReservasM8.addStyleClass("smallbold");
			var columnaNecesidadesM1 = this.getView().byId("__columnaNecesidadesM1");
			var columnaNecesidadesM2 = this.getView().byId("__columnaNecesidadesM2");
			var columnaNecesidadesM3 = this.getView().byId("__columnaNecesidadesM3");
			var columnaNecesidadesM4 = this.getView().byId("__columnaNecesidadesM4");
			var columnaNecesidadesM5 = this.getView().byId("__columnaNecesidadesM5");
			var columnaNecesidadesM6 = this.getView().byId("__columnaNecesidadesM6");
			var columnaNecesidadesM7 = this.getView().byId("__columnaNecesidadesM7");
			columnaNecesidadesM1.addStyleClass("smallbold");
			columnaNecesidadesM2.addStyleClass("smallbold");
			columnaNecesidadesM3.addStyleClass("smallbold");
			columnaNecesidadesM4.addStyleClass("smallbold");
			columnaNecesidadesM5.addStyleClass("smallbold");
			columnaNecesidadesM6.addStyleClass("smallbold");
			columnaNecesidadesM7.addStyleClass("smallbold");
			var columnaMercanciasM1 = this.getView().byId("__columnaMercanciasM1");
			var columnaMercanciasM2 = this.getView().byId("__columnaMercanciasM2");
			var columnaMercanciasM3 = this.getView().byId("__columnaMercanciasM3");
			var columnaMercanciasM4 = this.getView().byId("__columnaMercanciasM4");
			var columnaMercanciasM5 = this.getView().byId("__columnaMercanciasM5");
			var columnaMercanciasM6 = this.getView().byId("__columnaMercanciasM6");
			var columnaMercanciasM7 = this.getView().byId("__columnaMercanciasM7");
			var columnaMercanciasM8 = this.getView().byId("__columnaMercanciasM8");
			var columnaMercanciasM9 = this.getView().byId("__columnaMercanciasM9");
			columnaMercanciasM1.addStyleClass("smallbold");
			columnaMercanciasM2.addStyleClass("smallbold");
			columnaMercanciasM3.addStyleClass("smallbold");
			columnaMercanciasM4.addStyleClass("smallbold");
			columnaMercanciasM5.addStyleClass("smallbold");
			columnaMercanciasM6.addStyleClass("smallbold");
			columnaMercanciasM7.addStyleClass("smallbold");
			columnaMercanciasM8.addStyleClass("smallbold");
			columnaMercanciasM9.addStyleClass("smallbold");

			if (!oBuscadorMaterial.getValue() || !oBuscadorCentro.getValue()) {
				tabla.setVisible(true);
			} else {
				tabla.setVisible(true);
				var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
				var appPath = appId.replaceAll(".", "/");
				var appModulePath = jQuery.sap.getModulePath(appPath);
				var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
				//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
				var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
				var entity = "/StockSet";
				var oFilters = [];
				var oDataRead = {
					Warehouse: "",
					get_ind_lines: "",
					QUAL_INSPECTION: "",
					BLKD_STKC: "",
					RESTR_USE: "",
					RESERVATIONS: "",
					RESTR_CONSI: "",
					MEINS: ""
				};

				function fnSuccess(oDataR, oResponse) {
					oDataRead = oDataR;
				}

				function fnError(oError) {}
				if (oBuscadorMaterial.getValue().search("-") > 1) {
					var Campo1 = new sap.ui.model.Filter({
						path: "MATERIAL",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: oBuscadorMaterial.getValue().substring(0, oBuscadorMaterial.getValue().search("-"))
					});
				} else {
					var Campo1 = new sap.ui.model.Filter({
						path: "MATERIAL",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: oBuscadorMaterial.getValue()
					});
				}
				oFilters.push(Campo1);
				var Campo2 = new sap.ui.model.Filter({
					path: "Plant",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: oBuscadorCentro.getValue().substring(0, 4)
				});
				oFilters.push(Campo2);
				if (oBuscadorAlmacen.getValue().substring(0, 4) !== "") {
					var Campo3 = new sap.ui.model.Filter({
						path: "Warehouse",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: oBuscadorAlmacen.getValue().substring(0, 4)
					});
					oFilters.push(Campo3);
				}
				oModelRead.read(entity, {
					filters: oFilters,
					success: fnSuccess,
					error: fnError
				});
				oModelRead.attachRequestCompleted(function () {
					for (var j = 0; j < oDataRead.results.length; j++) {
						aStocks.push({
							Almacen: oDataRead.results[j].Warehouse
						});
						aStocks[j].StockLibre = oDataRead.results[j].get_ind_lines;
						aStocks[j].StockCtrl = oDataRead.results[j].QUAL_INSPECTION;
						aStocks[j].StockBloqueado = oDataRead.results[j].BLKD_STKC;
						aStocks[j].StockTotal = oDataRead.results[j].RESTR_USE;
						aStocks[j].Reservas = oDataRead.results[j].RESERVATIONS;
						aStocks[j].StockConsigNoLibre = oDataRead.results[j].RESTR_CONSI;
						aStocks[j].UM = oDataRead.results[j].MEINS;

					}
					tablaDatos.Stocks = aStocks;
					modeloDatos.setData(tablaDatos);
					oVista.setModel(modeloDatos);

				});
			}
		},

		onSuggestWarehouse: function (oEvent) {
			var oBuscador = this.getView().byId("searchFieldWarehouse");
			if (typeof oBuscador === "undefined") {
				oBuscador = this.getView().byId("searchFieldWarehouseM");
			}
			var oBuscadorCentro = this.getView().byId("searchFieldPlant");
			if (typeof oBuscadorCentro === "undefined") {
				oBuscadorCentro = this.getView().byId("searchFieldPlantM");
			}
			var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
			var appPath = appId.replaceAll(".", "/");
			var appModulePath = jQuery.sap.getModulePath(appPath);
			var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var entity = "/WarehouseSet";
			var oDataRead = {
				Wareh: "",
				Text: ""
			};

			function fnSuccess(oDataR, oResponse) {
				oDataRead = oDataR;
			}

			function fnError(oError) {}
			var Centro = oBuscadorCentro.getValue();
			if (!Centro) {
				var sugerenciaDummy = new sap.m.SuggestionItem();
				oBuscador.removeAllSuggestionItems();
				sugerenciaDummy.setDescription("Por favor, primero introduzca o seleccione un centro");
				oBuscador.addSuggestionItem(sugerenciaDummy);
				oBuscador.suggest();
			} else {
				var value = oEvent.getParameter("suggestValue");
				var oFilters = [];
				if (value) {
					var Campo1 = new sap.ui.model.Filter({
						path: "Wareh",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: value
					});
					oFilters.push(Campo1);
				}
				var Campo2 = new sap.ui.model.Filter({
					path: "Plant",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: Centro.substring(0, 4)
				});
				oFilters.push(Campo2);
				oModelRead.read(entity, {
					filters: oFilters,
					success: fnSuccess,
					error: fnError
				});
				oModelRead.attachRequestCompleted(function () {
					oBuscador.removeAllSuggestionItems();
					for (var j = 0; j < oDataRead.results.length; j++) {
						var sugerencia = new sap.m.SuggestionItem();
						sugerencia.setDescription(oDataRead.results[j].Wareh + " - " + oDataRead.results[j].Text);
						sugerencia.setKey(oDataRead.results[j].Wareh);
						oBuscador.addSuggestionItem(sugerencia);
					}
					oBuscador.suggest();
				});
			}
		},
		onSuggestWarehouseM: function (oEvent) {
			var oBuscador = this.getView().byId("searchFieldWarehouseM");
			var oBuscadorCentro = this.getView().byId("searchFieldPlantM");

			var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
			var appPath = appId.replaceAll(".", "/");
			var appModulePath = jQuery.sap.getModulePath(appPath);
			var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var entity = "/WarehouseSet";
			var oDataRead = {
				Wareh: "",
				Text: ""
			};

			function fnSuccess(oDataR, oResponse) {
				oDataRead = oDataR;
			}

			function fnError(oError) {}
			var Centro = oBuscadorCentro.getValue();
			if (!Centro) {
				var sugerenciaDummy = new sap.m.SuggestionItem();
				oBuscador.removeAllSuggestionItems();
				sugerenciaDummy.setDescription("Por favor, primero introduzca o seleccione un centro");
				oBuscador.addSuggestionItem(sugerenciaDummy);
				oBuscador.suggest();
			} else {
				var value = oEvent.getParameter("suggestValue");
				var oFilters = [];
				if (value) {
					var Campo1 = new sap.ui.model.Filter({
						path: "Wareh",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: value
					});
					oFilters.push(Campo1);
				}
				var Campo2 = new sap.ui.model.Filter({
					path: "Plant",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: Centro.substring(0, 4)
				});
				oFilters.push(Campo2);
				oModelRead.read(entity, {
					filters: oFilters,
					success: fnSuccess,
					error: fnError
				});
				oModelRead.attachRequestCompleted(function () {
					oBuscador.removeAllSuggestionItems();
					for (var j = 0; j < oDataRead.results.length; j++) {
						var sugerencia = new sap.m.SuggestionItem();
						sugerencia.setDescription(oDataRead.results[j].Wareh + " - " + oDataRead.results[j].Text);
						sugerencia.setKey(oDataRead.results[j].Wareh);
						oBuscador.addSuggestionItem(sugerencia);
					}
					oBuscador.suggest();
				});
			}
		},
		onSearchWarehouse: function (oEvent) {
			var itemSelected = oEvent.getParameter("suggestionItem");
			var oBuscador = this.getView().byId("searchFieldWarehouse");
			oBuscador.setValue(itemSelected.getDescription());
		},

		onSearchWarehouseM: function (oEvent) {
			var itemSelected = oEvent.getParameter("suggestionItem");
			var oBuscador = this.getView().byId("searchFieldWarehouseM");
			oBuscador.setValue(itemSelected.getDescription());
		},

		onSearchPlant: function (oEvent) {
			var itemSelected = oEvent.getParameter("suggestionItem");
			var oBuscador = this.getView().byId("searchFieldPlant");
			if (typeof itemSelected !== "undefined") {
				oBuscador.setValue(itemSelected.getDescription());
			}
		},

		onSearchPlantM: function (oEvent) {
			var itemSelected = oEvent.getParameter("suggestionItem");
			var oBuscador = this.getView().byId("searchFieldPlantM");
			if (typeof itemSelected !== "undefined") {
				oBuscador.setValue(itemSelected.getDescription());
			}
		},

		onSuggestPlant: function (oEvent) {
			var oBuscador = this.getView().byId("searchFieldPlant");
			var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
			var appPath = appId.replaceAll(".", "/");
			var appModulePath = jQuery.sap.getModulePath(appPath);
			var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var entity = "/PlantSet";
			var oDataRead = {
				PlantP: "",
				Description: ""
			};

			function fnSuccess(oDataR, oResponse) {
				oDataRead = oDataR;
			}

			function fnError(oError) {}
			var value = oEvent.getParameter("suggestValue");
			var oFilters = [];
			if (value) {
				var Campo1 = new sap.ui.model.Filter({
					path: "PlantP",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: value
				});
				oFilters.push(Campo1);
			}
			oModelRead.read(entity, {
				filters: oFilters,
				success: fnSuccess,
				error: fnError
			});
			oModelRead.attachRequestCompleted(function () {
				oBuscador.removeAllSuggestionItems();
				for (var j = 0; j < oDataRead.results.length; j++) {
					var sugerencia = new sap.m.SuggestionItem();
					sugerencia.setDescription(oDataRead.results[j].PlantP + " - " + oDataRead.results[j].Description);
					sugerencia.setKey(oDataRead.results[j].PlantP);
					oBuscador.addSuggestionItem(sugerencia);
				}
				oBuscador.suggest();
			});
		},

		onSuggestPlantM: function (oEvent) {
			var oBuscador = this.getView().byId("searchFieldPlantM");
			var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
			var appPath = appId.replaceAll(".", "/");
			var appModulePath = jQuery.sap.getModulePath(appPath);
			var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var entity = "/PlantSet";
			var oDataRead = {
				PlantP: "",
				Description: ""
			};

			function fnSuccess(oDataR, oResponse) {
				oDataRead = oDataR;
			}

			function fnError(oError) {}
			var value = oEvent.getParameter("suggestValue");
			var oFilters = [];
			if (value) {
				var Campo1 = new sap.ui.model.Filter({
					path: "PlantP",
					operator: sap.ui.model.FilterOperator.EQ,
					value1: value
				});
				oFilters.push(Campo1);
			}
			oModelRead.read(entity, {
				filters: oFilters,
				success: fnSuccess,
				error: fnError
			});
			oModelRead.attachRequestCompleted(function () {
				oBuscador.removeAllSuggestionItems();
				for (var j = 0; j < oDataRead.results.length; j++) {
					var sugerencia = new sap.m.SuggestionItem();
					sugerencia.setDescription(oDataRead.results[j].PlantP + " - " + oDataRead.results[j].Description);
					sugerencia.setKey(oDataRead.results[j].PlantP);
					oBuscador.addSuggestionItem(sugerencia);
				}
				oBuscador.suggest();
			});
		},

		onHandleValueHelp: function (oEvent) {
			var sInputValue = oEvent.getSource().getValue();
			this.inputId = oEvent.getSource().getId();
			// create value help dialog
			if (!this._valueHelpDialog) {
				this._valueHelpDialog = sap.ui.xmlfragment("ar.ledesma.fiori.mm.ui5consultarstockext.view.AyudaBusquedaMaterial", this);
				this.getView().addDependent(this._valueHelpDialog);
			}
			// open value help dialog filtered by the input value
			this._valueHelpDialog.fireSearch();
			this._valueHelpDialog.open(sInputValue);
		},

		_handleValueHelpSearch: function (evt) {
			var sValue = evt.getParameter("value");
			if (!sValue) {
				if (screen.width < 500) {
					var sValueAux = this.getView().byId("MaterialM");
				} else {
					var sValueAux = this.getView().byId("Material");
				}
				sValue = sValueAux.getValue();
			}
			if (screen.width < 500) {
				var oBuscadorCentro = this.getView().byId("searchFieldPlantM");
			} else {
				var oBuscadorCentro = this.getView().byId("searchFieldPlant");
			}
			var appId  = this.getOwnerComponent().getManifestEntry("/sap.app/id");
			var appPath = appId.replaceAll(".", "/");
			var appModulePath = jQuery.sap.getModulePath(appPath);
			var ServiceURL = appModulePath + "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			//var ServiceURL = "/sap/opu/odata/sap/ZMM_CONSULTA_STOCK_SRV";
			var oModelRead = new sap.ui.model.odata.v2.ODataModel(ServiceURL);
			var entity = "/MaterialSet";
			var Dialogo = this._valueHelpDialog;
			var oDataRead = {
				Material_H: "",
				Descripcion: ""
			};

			function fnSuccess(oDataR, oResponse) {
				oDataRead = oDataR;
			}

			function fnError(oError) {}
			if (sValue) {
				var Centro = oBuscadorCentro.getValue();
				if (!Centro) {
					var elementoDummy = new sap.m.StandardListItem();
					elementoDummy.setTitle("(Por favor, primero introduzca o seleccione un centro en la pantalla anterior)");
					this._valueHelpDialog.removeAllItems();
					this._valueHelpDialog.addItem(elementoDummy);
				} else {
					var oFilters = [];
					var Campo1 = new sap.ui.model.Filter({
						path: "Material_H",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: sValue
					});
					oFilters.push(Campo1);
					var Campo3 = new sap.ui.model.Filter({
						path: "Plant",
						operator: sap.ui.model.FilterOperator.EQ,
						value1: Centro.substring(0, 4)
					});
					oFilters.push(Campo3);
					oModelRead.read(entity, {
						filters: oFilters,
						success: fnSuccess,
						error: fnError
					});
					oModelRead.attachRequestCompleted(function () {
						Dialogo.removeAllItems();
						for (var j = 0; j < oDataRead.results.length; j++) {
							var sugerencia = new sap.m.StandardListItem();
							sugerencia.setTitle(oDataRead.results[j].Material_H + " - " + oDataRead.results[j].Descripcion);
							Dialogo.addItem(sugerencia);
						}
					});
				}
			} else {
				var elementoDummy2 = new sap.m.StandardListItem();
				elementoDummy2.setTitle(
					"(Imposible mostrar todos los valores posibles por ser demasiados. Por favor introduzca un texto de b\xFAsqueda.)");
				this._valueHelpDialog.removeAllItems();
				this._valueHelpDialog.addItem(elementoDummy2);
			}
		},
		_handleValueHelpClose: function (evt) {
			var oSelectedItem = evt.getParameter("selectedItem");
			if (oSelectedItem) {
				var productInput = this.getView().byId(this.inputId);
				productInput.setValue(oSelectedItem.getTitle());
			}
			evt.getSource().getBinding("items").filter([]);
		}

		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf zmmp.cons.stockv2.view.Principal
		 */
		//	onBeforeRendering: function() {
		//
		//	},

		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf zmmp.cons.stockv2.view.Principal
		 */
		//	onAfterRendering: function() {
		//
		//	},

		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf zmmp.cons.stockv2.view.Principal
		 */
		//	onExit: function() {
		//
		//	}

	});

});